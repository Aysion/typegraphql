// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
	output = "../src/typegraphql"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Tenant {
  id               String             @id @default(uuid())
  createdAt        DateTime           @default(now())
  createdBy        String?
  updatedAt        DateTime           @updatedAt
  updatedBy        String?
  deletedAt        DateTime?
  deletedBy        String?
  name             String
  subdomain        String?
  domain           String?
  UserProfile      UserProfile[]
  User             User[]
  PropertyCategory PropertyCategory[]
}

model UserProfile {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  createdBy String?
  updatedAt DateTime  @updatedAt
  updatedBy String?
  deletedAt DateTime?
  deletedBy String?
  tenant    Tenant    @relation(fields: [tenantId], references: [id])
  tenantId  String
  name      String
  level     Int
  User      User[]
}

model User {
  id            String      @id @default(uuid())
  createdAt     DateTime    @default(now())
  createdBy     String?
  updatedAt     DateTime    @updatedAt
  updatedBy     String?
  deletedAt     DateTime?
  deletedBy     String?
  tenant        Tenant      @relation(fields: [tenantId], references: [id])
  tenantId      String
  userProfile   UserProfile @relation(fields: [userProfileId], references: [id])
  userProfileId String
  email         String      @unique
  name          String?
  password      String?
}

model PropertyCategory {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  createdBy String?
  updatedAt DateTime  @updatedAt
  updatedBy String?
  deletedAt DateTime?
  deletedBy String?
  tenant    Tenant    @relation(fields: [tenantId], references: [id])
  tenantId  String
  name      String
}
